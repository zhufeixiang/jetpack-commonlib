plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'maven-publish'
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.zfx.commonlib'
                artifactId = 'commonlib'
                version = '1.0.0'
            }
        }
    }
}

android {
    namespace 'com.zfx.commonlib'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    testImplementation 'junit:junit:4.13.2'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    api 'androidx.activity:activity-ktx:1.6.1'
    api 'androidx.fragment:fragment-ktx:1.4.1'
    api 'com.squareup.okhttp3:okhttp:4.10.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    //动态替换BaseUrl库 使用可参考 https://github.com/JessYanCoding/RetrofitUrlManager
    api 'me.jessyan:retrofit-url-manager:1.4.0'

    api 'com.google.code.gson:gson:2.9.1'

    //LiveData 数据倒灌 https://github.com/KunMinX/UnPeek-LiveData
    api 'com.kunminx.arch:unpeek-livedata:7.8.0'

    //glide https://github.com/bumptech/glide
    api 'com.github.bumptech.glide:glide:4.15.0'
    kapt 'com.github.bumptech.glide:compiler:4.15.0'

    //recyclerview 万能适配器 https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.11'

    //https://github.com/Blankj/AndroidUtilCode 通用工具库
    api 'com.blankj:utilcodex:1.31.1'

    // 日志库 https://github.com/orhanobut/logger
    api 'com.orhanobut:logger:2.2.0'
    //各种弹框 https://github.com/li-xiaojun/XPopup
    api 'com.github.li-xiaojun:XPopup:2.9.19'
    //https://github.com/KingJA/LoadSir loading的框架
    api 'com.kingja.loadsir:loadsir:1.3.8'
    //android 4.4以上沉浸式状态栏和沉浸式导航栏管理 https://github.com/gyf-dev/ImmersionBar
    api 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    api 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'
    //头条屏幕适配方案 https://github.com/JessYanCoding/AndroidAutoSize
    api 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'
    //权限请求框架 https://github.com/getActivity/XXPermissions
    api 'com.github.getActivity:XXPermissions:16.8'

    api 'org.greenrobot:eventbus:3.3.1'


}